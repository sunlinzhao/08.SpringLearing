<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
<!--    加载dp.properties文件到容器-->
    <context:property-placeholder location="classpath:dp.properties"></context:property-placeholder>
<!--    自动扫描bean-->
    <context:component-scan base-package="com.slz.mybatis"></context:component-scan>
<!--    数据源配置-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
<!--    配置 SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:mybatisConfig.xml"></property>
<!--        配置 mapper.xml 文件位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>
<!--    对 Mapper 的扫描-->
    <bean id="scannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
<!--        配置 mapper 的基准包-->
        <property name="basePackage" value="com.slz.mybatis.mapper"></property>
    </bean>


<!--    配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
<!--        指定数据源-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
<!--    开启注解方式事务管理, 不需要注解方式配置可以注释掉-->
<!--    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>-->
<!--    xml 方式事务管理配置-->
    <tx:advice id="interceptor" transaction-manager="transactionManager">
        <tx:attributes>
<!--            配置添加事务管理的方法-->
            <tx:method name="doPay" propagation="REQUIRED" timeout="10" isolation="DEFAULT"/>
<!--            支持通配符写法-->
            <tx:method name="do*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
<!--    配置 AOP，将开启事务管理的方法通过切点表达式切入 -->
    <aop:config>
        <aop:pointcut id="myPointcut" expression="execution(* *..service..*.*(..))"/>
        <aop:advisor advice-ref="interceptor" pointcut-ref="myPointcut"></aop:advisor>
    </aop:config>
</beans>